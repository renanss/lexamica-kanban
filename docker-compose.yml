version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - DOCKER_ENV=development
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${PORT:-4000}:4000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    env_file:
      - ./backend/.env
    environment:
      - MONGODB_URL=mongodb://mongodb:27017/kanban
      - NODE_ENV=development
      - PORT=4000
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  mongodb:
    image: mongo:latest
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongodb_data:/data/db
      - ./database/init:/docker-entrypoint-initdb.d
    env_file:
      - ./backend/.env
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-kanban}
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # mongo-express:
  #   image: mongo-express:latest
  #   ports:
  #     - "8081:8081"
  #   environment:
  #     - ME_CONFIG_MONGODB_SERVER=mongodb
  #     - ME_CONFIG_MONGODB_PORT=27017
  #   depends_on:
  #     - mongodb

volumes:
  mongodb_data: 